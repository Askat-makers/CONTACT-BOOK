[{"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\index.js":"1","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\App.js":"2","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\Routes.js":"3","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\RenderContacts\\RenderContacts.jsx":"4","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\Home\\Home.jsx":"5","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\Contexts\\ContactsContext.jsx":"6","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\heplers\\Constants.jsx":"7","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\EditContact\\EditContact.jsx":"8","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\heplers\\history.jsx":"9","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\Navibar\\Navibar.jsx":"10","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\ContactDetail\\ContactDetail.jsx":"11"},{"size":223,"mtime":1607188477435,"results":"12","hashOfConfig":"13"},{"size":251,"mtime":1607192314258,"results":"14","hashOfConfig":"13"},{"size":975,"mtime":1607336222176,"results":"15","hashOfConfig":"13"},{"size":2190,"mtime":1607338024691,"results":"16","hashOfConfig":"13"},{"size":291,"mtime":1607326345740,"results":"17","hashOfConfig":"13"},{"size":2165,"mtime":1607334774804,"results":"18","hashOfConfig":"13"},{"size":112,"mtime":1607190493728,"results":"19","hashOfConfig":"13"},{"size":4448,"mtime":1607337993279,"results":"20","hashOfConfig":"13"},{"size":93,"mtime":1607333780348,"results":"21","hashOfConfig":"13"},{"size":4145,"mtime":1607335890815,"results":"22","hashOfConfig":"13"},{"size":2252,"mtime":1607337923060,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"mpqxft",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\index.js",[],["51","52"],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\App.js",[],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\Routes.js",[],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\RenderContacts\\RenderContacts.jsx",["53"],"import React, { useEffect } from 'react';\r\nimport './RenderContacts.css'\r\nimport { useContext } from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\nimport { contactsContext } from '../../Contexts/ContactsContext';\r\n// import {FontAwesomeIconnpm } from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUserSlash} from '@fortawesome/free-solid-svg-icons'\r\nimport {faEdit} from '@fortawesome/free-solid-svg-icons'\r\nimport {faAngleDoubleRight} from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst RenderContacts = () => {\r\n\r\n    const { contacts, getContactsData, delContact, editContact } = useContext(contactsContext)\r\n\r\n    useEffect(() => {\r\n        getContactsData()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>First Name</th>\r\n                        <th>Phone</th>\r\n                        <th>Address</th>\r\n                    </tr>\r\n                </thead>\r\n                {contacts.map((item, index) => (\r\n                    <tbody key={item.id}>\r\n                        <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.phone}</td>\r\n                            <td>{item.address}</td>\r\n                            <td className=\"icons\"><button className=\"btn delete\" title=\"Come ON\" onClick={() => delContact(item.id)}><FontAwesomeIcon icon={faUserSlash} /></button></td>\r\n                            <td className=\"icons\"><Link to=\"/edit\"><button className=\"btn\" onClick={() => editContact(item.id)}><FontAwesomeIcon icon={faEdit} /></button></Link></td>\r\n                            <td className=\"icons\"><Link to=\"/detail\"><button className=\"btn\" onClick={() => editContact(item.id)}><FontAwesomeIcon icon={faAngleDoubleRight} /></button></Link></td>\r\n                        </tr>\r\n                    </tbody>\r\n                ))}\r\n            </Table>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RenderContacts;","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\Contexts\\ContactsContext.jsx",[],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\heplers\\Constants.jsx",[],["54","55"],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\EditContact\\EditContact.jsx",["56","57","58"],"import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Button, Container, Form, Modal, ModalBody, Nav, Navbar } from 'react-bootstrap'\r\nimport { contactsContext } from '../../Contexts/ContactsContext';\r\nimport Home from '../Home/Home';\r\n\r\n\r\nconst EditContact = (props) => {\r\n\r\n    const { contactToEdit, saveContact, goBack } = useContext(contactsContext)\r\n    const [contact, setContact] = useState(contactToEdit)\r\n\r\n    useEffect(() => {\r\n        setContact(contactToEdit)\r\n    }, [contactToEdit])\r\n\r\n    function createContact(e) {\r\n        let newContact = {\r\n            ...contact,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setContact(newContact)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {contact ?\r\n                <>\r\n                    <Home/>\r\n                    <Modal show={true} onHide={() => goBack(props.history)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Edit contact</Modal.Title>\r\n                        </Modal.Header>\r\n                        <ModalBody>\r\n                            <Form onSubmit={(e) => saveContact(contact, props.history, e)}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control value={contact.name} onChange={createContact} name=\"name\" type=\"text\" placeholder=\"Name\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>LastName</Form.Label>\r\n                                    <Form.Control value={contact.lastName} onChange={createContact} name=\"lastName\" type=\"text\" placeholder=\"LastName\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Surname</Form.Label>\r\n                                    <Form.Control value={contact.surname} onChange={createContact} name=\"surname\" type=\"text\" placeholder=\"Surname\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Phone</Form.Label>\r\n                                    <Form.Control value={contact.phone} onChange={createContact} name=\"phone\" type=\"text\" placeholder=\"Phone\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control value={contact.address} onChange={createContact} name=\"address\" type=\"text\" placeholder=\"Address\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control value={contact.email} onChange={createContact} name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>LinkedIn</Form.Label>\r\n                                    <Form.Control value={contact.linkedin} onChange={createContact} name=\"linkedin\" type=\"text\" placeholder=\"LinkedIn\" />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                    <Form.Label>Add as</Form.Label>\r\n                                    <Form.Control as=\"select\" custom name=\"category\" onChange={createContact} defaultValue={contact.category}>\r\n                                        <option>Relative</option>\r\n                                        <option>Friend</option>\r\n                                        <option>Stranger</option>\r\n                                        <option>Colleague</option>\r\n                                        <option>Classmate</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button type=\"submit\">Save</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditContact;","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\heplers\\history.jsx",[],"C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\Navibar\\Navibar.jsx",["59"],"import React, { useContext, useState } from 'react';\r\nimport { Button, Container, Form, Modal, ModalBody, Nav, Navbar } from 'react-bootstrap'\r\nimport { contactsContext } from '../../Contexts/ContactsContext';\r\n\r\nconst Navibar = () => {\r\n\r\n    const [contact, setContact] = useState({})\r\n    const { addContact } = useContext(contactsContext)\r\n    const [show, setShow] = useState(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleClose = () => setShow(false)\r\n\r\n\r\n    function createContact(e) {\r\n        let newContact = {\r\n            ...contact,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setContact(newContact)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        addContact(contact)\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>Contact Book</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"\">\r\n                        <Button onClick={handleShow}>Add new contact</Button>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add contact</Modal.Title>\r\n                </Modal.Header>\r\n                <ModalBody>\r\n                    <Form onSubmit={handleClick}>\r\n                        <Form.Group>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"name\" type=\"text\" placeholder=\"Name\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>LastName</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"lastName\" type=\"text\" placeholder=\"LastName\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"surname\" type=\"text\" placeholder=\"Surname\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Phone</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"phone\" type=\"text\" placeholder=\"Phone\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"address\" type=\"text\" placeholder=\"Address\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>LinkedIn</Form.Label>\r\n                            <Form.Control onChange={createContact} name=\"linkedin\" type=\"text\" placeholder=\"LinkedIn\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Label>Add as</Form.Label>\r\n                            <Form.Control as=\"select\" custom name=\"category\" onChange={createContact}>\r\n                                <option>Relative</option>\r\n                                <option>Friend</option>\r\n                                <option>Stranger</option>\r\n                                <option>Colleague</option>\r\n                                <option>Classmate</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\">Save</Button>\r\n                    </Form> \r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navibar;","C:\\Users\\user\\Desktop\\makers\\2020\\Week-10\\good-contact-book\\src\\components\\ContactDetail\\ContactDetail.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":8,"nodeType":"66","endLine":19,"endColumn":10,"suggestions":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":18,"nodeType":"72","messageId":"73","endLine":4,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":4,"column":53,"nodeType":"72","messageId":"73","endLine":4,"endColumn":56},{"ruleId":"70","severity":1,"message":"75","line":4,"column":58,"nodeType":"72","messageId":"73","endLine":4,"endColumn":64},{"ruleId":"70","severity":1,"message":"71","line":2,"column":18,"nodeType":"72","messageId":"73","endLine":2,"endColumn":27},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContactsData'. Either include it or remove the dependency array.","ArrayExpression",["78"],["76"],["77"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [getContactsData]",{"range":"81","text":"82"},[794,796],"[getContactsData]"]